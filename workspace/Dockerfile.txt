
# Stage 1: Install dependencies
FROM node:20-alpine AS deps
WORKDIR /app
COPY package.json package-lock.json* ./
RUN npm ci

# Stage 2: Build the application
FROM node:20-alpine AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .
# Set environment variables for the build
ENV NEXT_TELEMETRY_DISABLED 1
# Ensure the API key is available during build if needed for static generation,
# but it's better practice to pass it at runtime.
# ARG GEMINI_API_KEY
# ENV GEMINI_API_KEY=${GEMINI_API_KEY}
RUN npm run build

# Stage 3: Production image
FROM node:20-alpine AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED 1

# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=builder /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

# You may need to copy other assets here if your app uses them, e.g.
# COPY --from=builder /app/data ./data

# The Genkit AI flow needs to be available at runtime
COPY --from=builder /app/src/ai ./src/ai
COPY --from=builder /app/.env ./.env

USER nextjs

EXPOSE 3000

ENV PORT 3000

CMD ["node", "server.js"]
